== INSTALLATION ======================================================

1. Download and install Joshua.  

   The best way to do this is to use git to clone the latest stable
   release of the codebase:

      git clone git@github.com:joshua-decoder/joshua.git
      cd joshua
      ant jar

   Make sure to set the JOSHUA environment variable:

      export JOSHUA=/path/to/joshua

2. Install external depencies.

   - SRILM
     http://www-speech.sri.com/projects/srilm/download.html

     You need SRILM to build a language model.  Make sure that SRILM
     environment variable points to the root of the SRILM installation.

   - Moses

     Moses is used to run GIZA++.  GIZA++ is included with Joshua,
     which simplifies the installation of Moses.  In the near future
     we plan to eliminate the Moses dependence, but in the meantime,
     you must either install Moses, or use the Berkeley aligner.
  
     To install Moses, following these simplified steps:

     1. Checkout the main branch from the SVN repository:

        svn co https://mosesdecoder.svn.sourceforge.net/svnroot/mosesdecoder/trunk moses

     2. (Optional) Compile moses.

           cd moses
		   ./regenerate-makefiles.sh
		   ./configure
		   make -j3

     3. In your shell profile, set the environment variable MOSES to
        point to this directory.

           export MOSES=/path/to/moses

     4. Install the Moses scripts

        Edit $MOSES/scripts/Makefile and change the following two lines:

	       TARGETDIR=$(MOSES)
           BINDIR=$(JOSHUA)/bin

        Then make and install:

           cd scripts
           make release

        Then set the following environment variable:

           export SCRIPTS_ROOTDIR=$MOSES/scripts-YYYYMMDD-0000

        where YYYYMMDD is the current date.

3. Test your installation.

      cd $JOSHUA/scripts/training/test
      make test

   This will build a Hiero model on a small Haitian/English corpus.
   At the end (twenty minutes or so later), you should see this:

      Processing 100 sentences...
      Evaluating candidate translations in plain file
      test/test.output.1best...
      BLEU_precision(1) = 165 / 8717 = 0.0189
      BLEU_precision(2) = 2 / 8617 = 0.0002
      BLEU_precision(3) = 0 / 8521 ==smoothed==> 0.0001
      BLEU_precision(4) = 0 / 8425 ==smoothed==> 0.0000
      BLEU_precision = 0.0003

      Length of candidate corpus = 8717
      Effective length of reference corpus = 2268
      BLEU_BP = 1.0000

        => BLEU = 0.0003
     
   That is a very bad score, but don't worry, it's because there isn't
   very much training data.

4. If the test completes successfully, you should be all set to go.
   Refer to the README file in this directory, or visit the Joshua
   wiki at
   https://github.com/joshua-decoder/joshua/wiki/Joshua-Pipeline .

== FEEDBACK ==========================================================

Problems?  Suggestions?  Email joshua_technical@googlegroups.com.
